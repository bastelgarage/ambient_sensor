#include <U8g2lib.h>           // Display control
#include <DallasTemperature.h> // Library to read the temperature from a DS18b20

U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);

// OneWire DS18b20 settings
#define ONE_WIRE_BUS 19
OneWire oneWire(ONE_WIRE_BUS);

DallasTemperature ds18b20(&oneWire);

// Variables (no need to change)
float temperature = 0;

// Symbol
#define thermometer_width 26
#define thermometer_height 55
static const unsigned char thermometer_bits[] U8X8_PROGMEM = {
  0x00, 0x7c, 0x00, 0x00, 0x00, 0xff, 0x01, 0x00, 0x80, 0xff, 0x03, 0x00,
  0xc0, 0xff, 0x07, 0x00, 0xe0, 0xff, 0x0f, 0x00, 0xe0, 0x83, 0x0f, 0x00,
  0xf0, 0x01, 0x1f, 0x00, 0xf0, 0x01, 0x1f, 0x00, 0xf0, 0x01, 0x1f, 0x00,
  0xf0, 0x01, 0x1f, 0x00, 0xf0, 0x01, 0x1f, 0x00, 0xf0, 0x01, 0x1f, 0x00,
  0xf0, 0x01, 0x1f, 0x00, 0xf0, 0x01, 0x1f, 0x00, 0xf0, 0x01, 0x1f, 0x00,
  0xf0, 0x01, 0x1f, 0x00, 0xf0, 0x01, 0x1f, 0x00, 0xf0, 0x39, 0x1f, 0x00,
  0xf0, 0x39, 0x1f, 0x00, 0xf0, 0x39, 0x1f, 0x00, 0xf0, 0x39, 0x1f, 0x00,
  0xf0, 0x39, 0x1f, 0x00, 0xf0, 0x39, 0x1f, 0x00, 0xf0, 0x39, 0x1f, 0x00,
  0xf0, 0x39, 0x1f, 0x00, 0xf0, 0x39, 0x1f, 0x00, 0xf0, 0x39, 0x1f, 0x00,
  0xf0, 0x39, 0x1f, 0x00, 0xf0, 0x39, 0x1f, 0x00, 0xf0, 0x39, 0x1f, 0x00,
  0xf0, 0x39, 0x1f, 0x00, 0xf0, 0x39, 0x1f, 0x00, 0xf0, 0x39, 0x1f, 0x00,
  0xf8, 0x39, 0x3f, 0x00, 0xfc, 0x38, 0x7e, 0x00, 0x7e, 0x38, 0xfc, 0x00,
  0x3e, 0x38, 0xf8, 0x00, 0x1f, 0x7c, 0xf0, 0x01, 0x1f, 0xff, 0xf1, 0x01,
  0x0f, 0xff, 0xe1, 0x01, 0x8f, 0xff, 0xe3, 0x01, 0x8f, 0xff, 0xe3, 0x01,
  0x8f, 0xff, 0xe3, 0x01, 0x8f, 0xff, 0xe3, 0x01, 0x0f, 0xff, 0xe1, 0x01,
  0x1f, 0xff, 0xf1, 0x01, 0x1f, 0x7c, 0xf0, 0x01, 0x3e, 0x00, 0xf8, 0x00,
  0x7e, 0x00, 0xfc, 0x00, 0xfc, 0x01, 0x7f, 0x00, 0xf8, 0xff, 0x3f, 0x00,
  0xf0, 0xff, 0x1f, 0x00, 0xe0, 0xff, 0x0f, 0x00, 0x80, 0xff, 0x03, 0x00,
  0x00, 0xfe, 0x00, 0x00
};

void setup(void) {
  Serial.begin(115200);                      // Serial monitor for debugging

  ds18b20.begin();                           // Initialization of DS18b20

  u8g2.begin();                              // Initialize OLED Display
  u8g2.setDrawColor(1);                      // DColor definition for XBM images
  u8g2.setBitmapMode(1);                     // Modus for XBM images
}

void loop(void) {
  ds18b20.requestTemperatures();
  temperature = ds18b20.getTempCByIndex(0);   // Read values from sensor
  Serial.println(temperature);
  u8g2.clearBuffer();                               // Clear the internal memory
  u8g2.drawXBM(0, 8, thermometer_width, thermometer_height, thermometer_bits);
  u8g2.setFont(u8g2_font_helvB10_tf);               // Choose a suitable font
  u8g2.setCursor(30, 12);
  u8g2.print("Temperature");
  u8g2.setFont(u8g2_font_helvB24_tf);               // Choose a suitable font
  u8g2.setCursor(28, 54);
  u8g2.print(temperature, 1);      // Write sensor value to the internal memory
  u8g2.print((char)176);
  u8g2.print("C");
  u8g2.sendBuffer();              // Transfer internal memory to the display
  delay(2000);
}

